import java.util.*;

public class Main {
  public static Scanner scn = new Scanner(System.in);

  public static class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    TreeNode(int val) {
      this.val = val;
    }
  }
  public static void rtp(TreeNode node , ArrayList<Integer> sres , ArrayList<ArrayList<Integer>> res){
      if(node == null){
          return;
      }
      if(node.left == null && node.right == null){
          ArrayList<Integer> b = new ArrayList<>(sres);
          b.add(node.val);
          res.add(b);
          return;
      }
      sres.add(node.val);
      rtp(node.left , sres , res);
      rtp(node.right , sres , res);
      sres.remove(sres.size() - 1);
  }
  static boolean isBst(TreeNode root){
      
      if(root == null) return true;
      TreeNode prev = null;
      TreeNode cur = root;
      
      while(cur != null){
          TreeNode ln = cur.left;
          if(ln == null){
              if(prev == null) prev = cur;
              else if(prev.val >= cur.val) return false;
              
              cur = cur.right;
          }else{
              TreeNode rn = ln;
              
              while(rn.right != null && rn.right != cur){
                  rn = rn.right;
              }
              if(rn.right == null){
                  rn.right = cur;
                  cur = cur.left;
              }else{
                  rn.right = null;
                  cur = cur.right;
              }
          }
      }
      return true;
  }

  // input_section=================================================

  public static TreeNode createTree(int[] arr, int[] IDX) {
    if (IDX[0] > arr.length || arr[IDX[0]] == -1) {
      IDX[0]++;
      return null;
    }
    TreeNode Treenode = new TreeNode(arr[IDX[0]++]);
    Treenode.left = createTree(arr, IDX);
    Treenode.right = createTree(arr, IDX);

    return Treenode;
  }

  public static void solve() {
    int n = scn.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++)
      arr[i] = scn.nextInt();

    int[] IDX = new int[1];
    TreeNode root = createTree(arr, IDX);

    boolean ans = isBst(root);
    System.out.println(ans);
    }

  public static void main(String[] args) {
    solve();
  }
}
